(()=>{const e={T:10,J:11,Q:12,K:13,A:14};function n(n){const t=n.split("?").filter((e=>""!==e)).map((n=>{const t=n[0],a=n[1];let o=e[t]||parseInt(t);return o-=2,{suit:a,rank:t,ranknum:o,cardString:n}}));return t.sort(((e,n)=>n.ranknum-e.ranknum)),t}const t={HIGH_CARD:"HIGH CARD",PAIR:"PAIR",TWO_PAIR:"TWO PAIR",THREE_OF_A_KIND:"THREE OF A KIND",STRAIGHT:"STRAIGHT",FLUSH:"FLUSH",FULL_HOUSE:"FULL HOUSE",FOUR_OF_A_KIND:"FOUR OF A KIND",STRAIGHT_FLUSH:"STRAIGHT FLUSH"},a={[t.HIGH_CARD]:1,[t.PAIR]:2,[t.TWO_PAIR]:3,[t.THREE_OF_A_KIND]:4,[t.STRAIGHT]:5,[t.FLUSH]:6,[t.FULL_HOUSE]:7,[t.FOUR_OF_A_KIND]:8,[t.STRAIGHT_FLUSH]:9},o={A:12,K:11,Q:10,J:9,T:8,9:7,8:6,7:5,6:4,5:3,4:2,3:1,2:0},i=["2D","2C","2H","2S","3D","3C","3H","3S","4D","4C","4H","4S","5D","5C","5H","5S","6D","6C","6H","6S","7D","7C","7H","7S","8D","8C","8H","8S","9D","9C","9H","9S","TD","TC","TH","TS","JD","JC","JH","JS","QD","QC","QH","QS","KD","KC","KH","KS","AD","AC","AH","AS"];function r(e){return function(e,n,t=!1){t||(e=e.sort(((e,n)=>n.ranknum-e.ranknum)));const a=e.map((e=>e.rank)),i=new Set(a),r=i.values();let s=r.next().value,c=s,l=1;for(const e of r){if(o[s]-o[e]==1){if(l++,l===n)return c}else c=e,l=1;s=e}if(i.has("A")&&n-1===l&&"2"===s)return c}(e,5,!0)}function s(e,n){const a=new Map,o=new Map,i=e.concat(n);i.sort(((e,n)=>n.ranknum-e.ranknum)),i.forEach((e=>{a.set(e.rank,(a.get(e.rank)||0)+1),o.set(e.suit,(o.get(e.suit)||0)+1)}));let s,l,g={count:0},d={count:0};if(a.forEach(((e,n)=>{e>g.count?(d=g,g={rank:n,count:e}):e>d.count&&(d={rank:n,count:e})})),o.forEach(((e,n)=>{if(e>=5){const e=i.filter((e=>e.suit===n));s=e.map((e=>e.rank)).slice(0,5),l=r(e)}})),l)return{hand:t.STRAIGHT_FLUSH,handRanks:[l],kickers:[]};if(4===g.count){const e=g.rank,n=i.filter((n=>n.rank!=e));return{hand:t.FOUR_OF_A_KIND,handRanks:[e],kickers:c(n,1)}}if(3===g.count&&d.count>=2){const e=g.rank,n=d.rank;return{hand:t.FULL_HOUSE,handRanks:[e,n],kickers:[]}}if(s)return{hand:t.FLUSH,handRanks:s,kickers:[]};const _=r(i);if(_)return{hand:t.STRAIGHT,handRanks:[_],kickers:[]};if(3===g.count){const e=g.rank;var u=i.filter((n=>n.rank!=e));return{hand:t.THREE_OF_A_KIND,handRanks:[e],kickers:c(u,2)}}if(2===g.count&&2===d.count){const e=[g.rank,d.rank];var h=i.filter((n=>!e.includes(n.rank)));return{hand:t.TWO_PAIR,handRanks:e,kickers:c(h,1)}}if(2===g.count){const e=g.rank;var m=i.filter((n=>n.rank!=e));return{hand:t.PAIR,handRanks:[e],kickers:c(m,3)}}return{hand:t.HIGH_CARD,handRanks:[],kickers:c(i,5)}}function c(e,n){return e.map((e=>e.rank)).slice(0,n)}function l(e,n){var t=a[e.hand]-a[n.hand];if(t>0)return"win";if(t<0)return"lose";for(const[a,i]of e.handRanks.entries()){if((t=o[i]-o[n.handRanks[a]])>0)return"win";if(t<0)return"lose"}for(const[a,i]of e.kickers.entries()){if((t=o[i]-o[n.kickers[a]])>0)return"win";if(t<0)return"lose"}return"draw"}function g(e,t){const a=new Set([...e.map((e=>e.cardString)),...t.map((e=>e.cardString))]);if(5===t.length)return d(e,t,a);if(4===t.length){const o=i.filter((e=>!a.has(e)));return o.reduce(((o,i)=>{const r=[...t,...n(i)];return a.add(i),o+=d(e,r,a),a.delete(i),o}),0)/o.length}if(3===t.length){const o=i.filter((e=>!a.has(e)));let r=0;for(let i=0;i<o.length;i++){a.add(o[i]);for(let s=i+1;s<o.length;s++){a.add(o[s]);const c=[...t,...n(o[i]),...n(o[s])];r+=d(e,c,a),a.delete(o[s])}a.delete(o[i])}return r/(o.length*(o.length-1)/2)}}function d(e,t,a){let o=0,r=0,c=0;const g=i.filter((e=>!a.has(e))),d=s(e,t);for(let e=0;e<g.length;e++)for(let a=e+1;a<g.length;a++){const i=l(d,s(n(`${g[e]}?${g[a]}?`),t));"win"===i?o++:"lose"===i?r++:"draw"===i&&c++}return(o+c)/(o+c+r)}let _=!1;const u=game.big_blind/100,h="all",m={AA:[h,h],72:[0,h],KK:[h,h],QQ:[h,h],JJ:[h,h],TT:[h,h],99:[h,h],88:[h,h],AK:[h,h],AQ:[30,3],AJ:[30,3],A5:[3,1],AT:[8,3],A9:[1,1],A8:[1,1],KQ:[8,3],KJ:[8,3],KT:[3,3],K9:[1,1],QJ:[3,1],QT:[3,1],Q9:[1,1],Q8:[1,1],JT:[3,1],J9:[1,1],J8:[1,1],J7:[1,1],T9:[1,1],77:[3,1],66:[3,1],55:[3,1],44:[3,1],33:[3,1],22:[3,1]},f={AK:[h,h],AQ:[h,h],AJ:[30,h],AT:[10,h],A9:[10,3],A8:[8,3],A7:[6,1],A6:[6,1],A5:[8,3],A4:[5,1],A3:[5,1],A2:[5,1],KQ:[10,h],KJ:[10,5],KT:[8,3],K9:[6,3],K8:[1,3],QJ:[10,5],QT:[8,1],Q9:[3,1],Q8:[3,1],JT:[10,3],J9:[3,1],J8:[3,1],J7:[3,1],T9:[6,3],T8:[1,1],T7:[1,1],98:[5,1],97:[1,1],87:[5,1],86:[1,1],76:[1,1],75:[1,1],65:[1,1],64:[1,1],54:[1,1],43:[1,1],32:[1,1]};async function k(){if(!game.action_widget||!game.players[game.client_perspective].cards.card_str)return;await new Promise((e=>setTimeout(e,1e3)));const e=game.players[game.client_perspective].cards.card_str,t=game.board.card_str,a=t?` and the board shows ${t}.`:".";console.log(`My hole cards are ${e}${a}`),function(e,t){if("NL Texas Holdem"!==game.ruleset_name)return console.log(`Folding/checking because we aren't playing 'NL Texas Holdem'. The game is ${game.ruleset_name}.`),void T();try{!function(){game.game_options_widget.allow_easy_reveal&&!game.game_options_widget.easy_reveal.is_checked()&&game.game_options_widget.easy_reveal.clicked();game.game_options_widget.bomb_pot_value&&!game.game_options_widget.bomb_pot.is_checked()&&game.game_options_widget.bomb_pot.clicked()}()}catch(e){}""===t?function(e){const[t,a]=n(e),o=t.rank+a.rank;if(t.suit===a.suit){const e=f[o];if(e){console.log("Preflop cards are suited, and match one of the suited starting hands");const[n,t]=e;return void H(n,t)}}const i=m[o];if(!i)return Math.random()>.9?(console.log("Even though this isn't a hand we usually play, randomly limping in if it's cheap."),void p(3,1)):(console.log("Checking or folding."),void T());const[r,s]=i;H(r,s)}(e):function(e,t,a){const o=n(e),i=n(t),r=g(o,i);console.log(`Chances of winning against a random hand: ${r}.`),console.log(`Number of players in hand: ${a}.`),bigBetThreshold=.8,smallBetThreshold=.65,2==a?(bigBetThreshold=.65,smallBetThreshold=.5):(a=3,bigBetThreshold=.7,smallBetThreshold=.55);const s=Math.random()>.95;console.log(`Small bet threshold: ${smallBetThreshold}, Big bet threshold: ${bigBetThreshold}, random bluff: ${s}`);const c=game.action_widget.pot_size;if(r>.9){const e=game.action_widget.bet_in_front+game.action_widget.stack_size;return A(e,3*Math.random()>2&&i.length<5?0:Math.random()*e)}if(r>bigBetThreshold){const e=(r-.65)/.25;return A(Math.max(3*u,2*c*e),c*e)}if(r>smallBetThreshold)return A(Math.max(3*u,c/10),0);if(s)return console.log("I'm just bluffing!"),p(0,h);console.log("Checking or folding."),T()}(e,t,game.n_players_in_hand)}(e,t)}function T(){0===game.action_widget.to_call?w():game.action_widget.execute_fold()}function w(){game.action_widget.execute_check_call()}function A(e,n){const t=game.action_widget.bet_in_front,a=t+game.action_widget.to_call/100,o=t+game.action_widget.stack_size,i=game.action_widget.threshold_values.length?game.action_widget.threshold_values[0]:void 0;if(console.info(`Raise to limit: ${n}. Min bet: ${i}. Call to limit: ${e}. Bet size if call: ${a}.`),(game.action_widget.bet_button||game.action_widget.raise_button)&&i<=n)return console.log(n===o?"Going all in.":`Raising to ${n}.`),game.action_widget.update_slider_by_value(n),game.action_widget.sizing_input.value=n,void game.action_widget.execute_bet_raise();game.action_widget.all_in&&o<=n?(console.log("Can't/won't raise; going all in instead."),game.action_widget.all_in.execute()):game.action_widget.call_button&&a<=e?(console.log("Can't/won't raise; calling instead."),w()):(console.log("Checking/folding."),T())}function p(e,n){const t=game.action_widget.stack_size+game.action_widget.bet_in_front;A(e===h?t:e*u,n===h?t:n*u)}function H(e,n){n===h?(rand=Math.random(),rand<.2?p(e,3):rand<.4?p(e,5):rand<.6?p(e,10):p(e,h)):p(e,n)}setInterval((async function(){try{R||(R=!0,await k())}finally{await new Promise((e=>setTimeout(e,1e3))),R=!1}}),2500),socket.on("is in showdown",(function(){const e=game.client_perspective;game.n_players_in_hand>1&&game.players[e].is_sitting_in&&!game.players[e].is_folded&&(console.log("SHOWDOWN WITH ME IN IT"),console.log("# players in showdown:",game.n_players_in_hand),_=Object.entries(game.players).some((([n,t])=>t.is_sitting_in&&!t.is_folded&&0===t.chips&&n!==e+"")),console.log("tauntOpportunity",_))})),socket.on("distributing pot",(async function(e){const n=game.client_perspective;_&&e.winners[n]&&1===Object.keys(e.winners).length&&(console.log("Will taunt in 3 seconds because I knocked someone out!"),setTimeout((()=>{console.log("Taunting because I knocked someone out!"),socket.emit("taunt",{taunt:16,id:game.table_id,group_id:game.group_id})}),3e3)),_=!1}));let R=!1})();
//# sourceMappingURL=index.js.map
